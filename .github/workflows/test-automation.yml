name: Comprehensive Test Automation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        test-type: [functional, performance, accessibility, security, cross-browser]
        
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Functional Tests
      if: matrix.test-type == 'functional'
      run: npx playwright test tests/about-page.spec.js tests/contact-page.spec.js tests/header.spec.js tests/footer.spec.js --project=${{ matrix.browser }}
    
    - name: Run Performance Tests
      if: matrix.test-type == 'performance'
      run: npx playwright test tests/performance.spec.js --project=${{ matrix.browser }}
    
    - name: Run Accessibility Tests
      if: matrix.test-type == 'accessibility'
      run: npx playwright test tests/accessibility.spec.js --project=${{ matrix.browser }}
    
    - name: Run Security Tests
      if: matrix.test-type == 'security'
      run: npx playwright test tests/security.spec.js --project=${{ matrix.browser }}
    
    - name: Run Cross-Browser Tests
      if: matrix.test-type == 'cross-browser'
      run: npx playwright test tests/cross-browser.spec.js --project=${{ matrix.browser }}
    
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report-${{ matrix.browser }}-${{ matrix.test-type }}
        path: playwright-report/
        retention-days: 30
    
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ matrix.browser }}-${{ matrix.test-type }}
        path: test-results/
        retention-days: 30

  comprehensive-test:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Enhanced Test Suite
      run: npm run test:enhanced
    
    - name: Generate Test Report
      if: always()
      run: |
        echo "## Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        if [ -f test-results/test-execution-report.json ]; then
          echo "### Results" >> $GITHUB_STEP_SUMMARY
          node -e "
            const report = JSON.parse(require('fs').readFileSync('test-results/test-execution-report.json', 'utf8'));
            console.log(\`- ✅ Passed: \${report.summary.passed}\`);
            console.log(\`- ❌ Failed: \${report.summary.failed}\`);
            console.log(\`- 📁 Total: \${report.summary.total}\`);
            console.log(\`- ⏱️ Duration: \${Math.round(report.duration / 1000)}s\`);
          " >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Upload HTML Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-html-report
        path: playwright-report/
        retention-days: 30
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-execution-report
        path: test-results/
        retention-days: 30

  lighthouse-audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Audit URLs using Lighthouse
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://www.arthursenko.com/
          https://www.arthursenko.com/contact
        configPath: './lighthouse.config.js'
        uploadArtifacts: true
        temporaryPublicStorage: true

  notify:
    runs-on: ubuntu-latest
    needs: [test, comprehensive-test]
    if: failure()
    
    steps:
    - name: Notify on Failure
      run: |
        echo "Test automation pipeline failed. Please check the test results and logs."
        echo "Failed job: ${{ github.job }}"
        echo "Commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref }}"